// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  studentId      String   @unique @map("student_id")
  name           String
  nickname       String?
  contact        String?
  password       String?
  role           String   @default("未认证用户")
  status         String   @default("正常")
  avatar         String?
  activationCode String?  @map("activation_code")
  resetCode      String?  @map("reset_code")
  resetCodeExpiresAt DateTime? @map("reset_code_expires_at")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  deleted        Boolean  @default(false)

  // 关联关系
  products       Product[]
  comments       Comment[]
  favorites      Favorite[]
  sentMessages   Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  reports        Report[]
  notifications  Notification[]

  @@map("users")
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  icon        String?   @default("📁")
  isActive    Boolean   @default(true) @map("is_active")
  isDefault   Boolean   @default(false) @map("is_default")
  sortOrder   Int       @default(0) @map("sort_order")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deleted     Boolean   @default(false)

  // 关联关系
  products    Product[]

  @@map("categories")
}

model Product {
  id          String    @id @default(cuid())
  name        String
  description String?   @db.Text
  price       Decimal   @db.Decimal(10, 2)
  categoryId  String    @map("category_id")
  sellerId    String    @map("seller_id")
  contact     String?
  status      String    @default("在售")
  images      String?   @db.Text // JSON格式存储图片URLs
  viewCount   Int       @default(0) @map("view_count")
  soldAt      DateTime? @map("sold_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  deleted     Boolean   @default(false)

  // 关联关系
  category    Category   @relation(fields: [categoryId], references: [id])
  seller      User       @relation(fields: [sellerId], references: [id])
  comments    Comment[]
  favorites   Favorite[]
  reports     Report[]

  @@map("products")
}

model Comment {
  id        String   @id @default(cuid())
  productId String   @map("product_id")
  userId    String   @map("user_id")
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deleted   Boolean  @default(false)

  // 关联关系
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map("comments")
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  productId String   @map("product_id")
  createdAt DateTime @default(now()) @map("created_at")

  // 关联关系
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("favorites")
}

model Message {
  id         String   @id @default(cuid())
  senderId   String   @map("sender_id")
  receiverId String   @map("receiver_id")
  content    String   @db.Text
  isRead     Boolean  @default(false) @map("is_read")
  sentAt     DateTime @default(now()) @map("sent_at")
  deleted    Boolean  @default(false)

  // 关联关系
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@map("messages")
}

model Notification {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  title     String
  content   String   @db.Text
  type      String   // 通知类型：系统通知、交易通知等
  isRead    Boolean  @default(false) @map("is_read")
  createdAt DateTime @default(now()) @map("created_at")
  deleted   Boolean  @default(false)

  // 关联关系
  user      User     @relation(fields: [userId], references: [id])

  @@map("notifications")
}

model Report {
  id        String   @id @default(cuid())
  reporterId String  @map("reporter_id")
  productId String?  @map("product_id")
  reason    String
  content   String?  @db.Text
  status    String   @default("待处理") // 待处理、已处理、已驳回
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deleted   Boolean  @default(false)

  // 关联关系
  reporter  User     @relation(fields: [reporterId], references: [id])
  product   Product? @relation(fields: [productId], references: [id])

  @@map("reports")
}

model Notice {
  id        String   @id @default(cuid())
  title     String
  content   String   @db.Text
  type      String   @default("系统公告")
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deleted   Boolean  @default(false)

  @@map("notices")
} 